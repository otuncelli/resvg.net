// <auto-generated />
using System;
using System.Runtime.InteropServices;

namespace resvg.net
{
    internal static partial class NativeMethods
    {
        #region resvg_transform_identity

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        private delegate ResvgTransform resvg_transform_identity_delegate();

        private static resvg_transform_identity_delegate resvg_transform_identity_fptr =
           () =>
           {
               resvg_transform_identity_fptr =
                   GetDelegateForFunction<resvg_transform_identity_delegate>("resvg", "resvg_transform_identity");
               return resvg_transform_identity_fptr();
           };

        public static ResvgTransform resvg_transform_identity()
        {
            return resvg_transform_identity_fptr();
        }

        #endregion

        #region resvg_init_log

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        private delegate void resvg_init_log_delegate();

        private static resvg_init_log_delegate resvg_init_log_fptr =
           () =>
           {
               resvg_init_log_fptr =
                   GetDelegateForFunction<resvg_init_log_delegate>("resvg", "resvg_init_log");
               resvg_init_log_fptr();
           };

        public static void resvg_init_log()
        {
            resvg_init_log_fptr();
        }

        #endregion

        #region resvg_options_create

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        private delegate IntPtr resvg_options_create_delegate();

        private static resvg_options_create_delegate resvg_options_create_fptr =
           () =>
           {
               resvg_options_create_fptr =
                   GetDelegateForFunction<resvg_options_create_delegate>("resvg", "resvg_options_create");
               return resvg_options_create_fptr();
           };

        public static IntPtr resvg_options_create()
        {
            return resvg_options_create_fptr();
        }

        #endregion

        #region resvg_options_set_resources_dir

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        private delegate void resvg_options_set_resources_dir_delegate(IntPtr opt, [MarshalAs(UnmanagedType.LPUTF8Str)] string path);

        private static resvg_options_set_resources_dir_delegate resvg_options_set_resources_dir_fptr =
           (IntPtr opt, string path) =>
           {
               resvg_options_set_resources_dir_fptr =
                   GetDelegateForFunction<resvg_options_set_resources_dir_delegate>("resvg", "resvg_options_set_resources_dir");
               resvg_options_set_resources_dir_fptr(opt, path);
           };

        public static void resvg_options_set_resources_dir(IntPtr opt, [MarshalAs(UnmanagedType.LPUTF8Str)] string path)
        {
            resvg_options_set_resources_dir_fptr(opt, path);
        }

        #endregion

        #region resvg_options_set_dpi

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        private delegate void resvg_options_set_dpi_delegate(IntPtr opt, float dpi);

        private static resvg_options_set_dpi_delegate resvg_options_set_dpi_fptr =
           (IntPtr opt, float dpi) =>
           {
               resvg_options_set_dpi_fptr =
                   GetDelegateForFunction<resvg_options_set_dpi_delegate>("resvg", "resvg_options_set_dpi");
               resvg_options_set_dpi_fptr(opt, dpi);
           };

        public static void resvg_options_set_dpi(IntPtr opt, float dpi)
        {
            resvg_options_set_dpi_fptr(opt, dpi);
        }

        #endregion

        #region resvg_options_set_font_family

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        private delegate void resvg_options_set_font_family_delegate(IntPtr opt, [MarshalAs(UnmanagedType.LPUTF8Str)] string family);

        private static resvg_options_set_font_family_delegate resvg_options_set_font_family_fptr =
           (IntPtr opt, string family) =>
           {
               resvg_options_set_font_family_fptr =
                   GetDelegateForFunction<resvg_options_set_font_family_delegate>("resvg", "resvg_options_set_font_family");
               resvg_options_set_font_family_fptr(opt, family);
           };

        public static void resvg_options_set_font_family(IntPtr opt, [MarshalAs(UnmanagedType.LPUTF8Str)] string family)
        {
            resvg_options_set_font_family_fptr(opt, family);
        }

        #endregion

        #region resvg_options_set_font_size

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        private delegate void resvg_options_set_font_size_delegate(IntPtr opt, float size);

        private static resvg_options_set_font_size_delegate resvg_options_set_font_size_fptr =
           (IntPtr opt, float size) =>
           {
               resvg_options_set_font_size_fptr =
                   GetDelegateForFunction<resvg_options_set_font_size_delegate>("resvg", "resvg_options_set_font_size");
               resvg_options_set_font_size_fptr(opt, size);
           };

        public static void resvg_options_set_font_size(IntPtr opt, float size)
        {
            resvg_options_set_font_size_fptr(opt, size);
        }

        #endregion

        #region resvg_options_set_serif_family

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        private delegate void resvg_options_set_serif_family_delegate(IntPtr opt, [MarshalAs(UnmanagedType.LPUTF8Str)] string family);

        private static resvg_options_set_serif_family_delegate resvg_options_set_serif_family_fptr =
           (IntPtr opt, string family) =>
           {
               resvg_options_set_serif_family_fptr =
                   GetDelegateForFunction<resvg_options_set_serif_family_delegate>("resvg", "resvg_options_set_serif_family");
               resvg_options_set_serif_family_fptr(opt, family);
           };

        public static void resvg_options_set_serif_family(IntPtr opt, [MarshalAs(UnmanagedType.LPUTF8Str)] string family)
        {
            resvg_options_set_serif_family_fptr(opt, family);
        }

        #endregion

        #region resvg_options_set_sans_serif_family

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        private delegate void resvg_options_set_sans_serif_family_delegate(IntPtr opt, [MarshalAs(UnmanagedType.LPUTF8Str)] string family);

        private static resvg_options_set_sans_serif_family_delegate resvg_options_set_sans_serif_family_fptr =
           (IntPtr opt, string family) =>
           {
               resvg_options_set_sans_serif_family_fptr =
                   GetDelegateForFunction<resvg_options_set_sans_serif_family_delegate>("resvg", "resvg_options_set_sans_serif_family");
               resvg_options_set_sans_serif_family_fptr(opt, family);
           };

        public static void resvg_options_set_sans_serif_family(IntPtr opt, [MarshalAs(UnmanagedType.LPUTF8Str)] string family)
        {
            resvg_options_set_sans_serif_family_fptr(opt, family);
        }

        #endregion

        #region resvg_options_set_cursive_family

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        private delegate void resvg_options_set_cursive_family_delegate(IntPtr opt, [MarshalAs(UnmanagedType.LPUTF8Str)] string family);

        private static resvg_options_set_cursive_family_delegate resvg_options_set_cursive_family_fptr =
           (IntPtr opt, string family) =>
           {
               resvg_options_set_cursive_family_fptr =
                   GetDelegateForFunction<resvg_options_set_cursive_family_delegate>("resvg", "resvg_options_set_cursive_family");
               resvg_options_set_cursive_family_fptr(opt, family);
           };

        public static void resvg_options_set_cursive_family(IntPtr opt, [MarshalAs(UnmanagedType.LPUTF8Str)] string family)
        {
            resvg_options_set_cursive_family_fptr(opt, family);
        }

        #endregion

        #region resvg_options_set_fantasy_family

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        private delegate void resvg_options_set_fantasy_family_delegate(IntPtr opt, [MarshalAs(UnmanagedType.LPUTF8Str)] string family);

        private static resvg_options_set_fantasy_family_delegate resvg_options_set_fantasy_family_fptr =
           (IntPtr opt, string family) =>
           {
               resvg_options_set_fantasy_family_fptr =
                   GetDelegateForFunction<resvg_options_set_fantasy_family_delegate>("resvg", "resvg_options_set_fantasy_family");
               resvg_options_set_fantasy_family_fptr(opt, family);
           };

        public static void resvg_options_set_fantasy_family(IntPtr opt, [MarshalAs(UnmanagedType.LPUTF8Str)] string family)
        {
            resvg_options_set_fantasy_family_fptr(opt, family);
        }

        #endregion

        #region resvg_options_set_monospace_family

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        private delegate void resvg_options_set_monospace_family_delegate(IntPtr opt, [MarshalAs(UnmanagedType.LPUTF8Str)] string family);

        private static resvg_options_set_monospace_family_delegate resvg_options_set_monospace_family_fptr =
           (IntPtr opt, string family) =>
           {
               resvg_options_set_monospace_family_fptr =
                   GetDelegateForFunction<resvg_options_set_monospace_family_delegate>("resvg", "resvg_options_set_monospace_family");
               resvg_options_set_monospace_family_fptr(opt, family);
           };

        public static void resvg_options_set_monospace_family(IntPtr opt, [MarshalAs(UnmanagedType.LPUTF8Str)] string family)
        {
            resvg_options_set_monospace_family_fptr(opt, family);
        }

        #endregion

        #region resvg_options_set_languages

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        private delegate void resvg_options_set_languages_delegate(IntPtr opt, [MarshalAs(UnmanagedType.LPUTF8Str)] string languages);

        private static resvg_options_set_languages_delegate resvg_options_set_languages_fptr =
           (IntPtr opt, string languages) =>
           {
               resvg_options_set_languages_fptr =
                   GetDelegateForFunction<resvg_options_set_languages_delegate>("resvg", "resvg_options_set_languages");
               resvg_options_set_languages_fptr(opt, languages);
           };

        public static void resvg_options_set_languages(IntPtr opt, [MarshalAs(UnmanagedType.LPUTF8Str)] string languages)
        {
            resvg_options_set_languages_fptr(opt, languages);
        }

        #endregion

        #region resvg_options_set_shape_rendering_mode

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        private delegate void resvg_options_set_shape_rendering_mode_delegate(IntPtr opt, ShapeRenderingMode mode);

        private static resvg_options_set_shape_rendering_mode_delegate resvg_options_set_shape_rendering_mode_fptr =
           (IntPtr opt, ShapeRenderingMode mode) =>
           {
               resvg_options_set_shape_rendering_mode_fptr =
                   GetDelegateForFunction<resvg_options_set_shape_rendering_mode_delegate>("resvg", "resvg_options_set_shape_rendering_mode");
               resvg_options_set_shape_rendering_mode_fptr(opt, mode);
           };

        public static void resvg_options_set_shape_rendering_mode(IntPtr opt, ShapeRenderingMode mode)
        {
            resvg_options_set_shape_rendering_mode_fptr(opt, mode);
        }

        #endregion

        #region resvg_options_set_text_rendering_mode

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        private delegate void resvg_options_set_text_rendering_mode_delegate(IntPtr opt, TextRenderingMode mode);

        private static resvg_options_set_text_rendering_mode_delegate resvg_options_set_text_rendering_mode_fptr =
           (IntPtr opt, TextRenderingMode mode) =>
           {
               resvg_options_set_text_rendering_mode_fptr =
                   GetDelegateForFunction<resvg_options_set_text_rendering_mode_delegate>("resvg", "resvg_options_set_text_rendering_mode");
               resvg_options_set_text_rendering_mode_fptr(opt, mode);
           };

        public static void resvg_options_set_text_rendering_mode(IntPtr opt, TextRenderingMode mode)
        {
            resvg_options_set_text_rendering_mode_fptr(opt, mode);
        }

        #endregion

        #region resvg_options_set_image_rendering_mode

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        private delegate void resvg_options_set_image_rendering_mode_delegate(IntPtr opt, ImageRenderingMode mode);

        private static resvg_options_set_image_rendering_mode_delegate resvg_options_set_image_rendering_mode_fptr =
           (IntPtr opt, ImageRenderingMode mode) =>
           {
               resvg_options_set_image_rendering_mode_fptr =
                   GetDelegateForFunction<resvg_options_set_image_rendering_mode_delegate>("resvg", "resvg_options_set_image_rendering_mode");
               resvg_options_set_image_rendering_mode_fptr(opt, mode);
           };

        public static void resvg_options_set_image_rendering_mode(IntPtr opt, ImageRenderingMode mode)
        {
            resvg_options_set_image_rendering_mode_fptr(opt, mode);
        }

        #endregion

        #region resvg_options_load_font_data

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        private delegate void resvg_options_load_font_data_delegate(IntPtr opt, IntPtr data, UIntPtr length);

        private static resvg_options_load_font_data_delegate resvg_options_load_font_data_fptr =
           (IntPtr opt, IntPtr data, UIntPtr length) =>
           {
               resvg_options_load_font_data_fptr =
                   GetDelegateForFunction<resvg_options_load_font_data_delegate>("resvg", "resvg_options_load_font_data");
               resvg_options_load_font_data_fptr(opt, data, length);
           };

        public static void resvg_options_load_font_data(IntPtr opt, IntPtr data, UIntPtr length)
        {
            resvg_options_load_font_data_fptr(opt, data, length);
        }

        #endregion

        #region resvg_options_load_font_file

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        private delegate void resvg_options_load_font_file_delegate(IntPtr opt, [MarshalAs(UnmanagedType.LPUTF8Str)] string file_path);

        private static resvg_options_load_font_file_delegate resvg_options_load_font_file_fptr =
           (IntPtr opt, string file_path) =>
           {
               resvg_options_load_font_file_fptr =
                   GetDelegateForFunction<resvg_options_load_font_file_delegate>("resvg", "resvg_options_load_font_file");
               resvg_options_load_font_file_fptr(opt, file_path);
           };

        public static void resvg_options_load_font_file(IntPtr opt, [MarshalAs(UnmanagedType.LPUTF8Str)] string file_path)
        {
            resvg_options_load_font_file_fptr(opt, file_path);
        }

        #endregion

        #region resvg_options_load_system_fonts

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        private delegate void resvg_options_load_system_fonts_delegate(IntPtr opt);

        private static resvg_options_load_system_fonts_delegate resvg_options_load_system_fonts_fptr =
           (IntPtr opt) =>
           {
               resvg_options_load_system_fonts_fptr =
                   GetDelegateForFunction<resvg_options_load_system_fonts_delegate>("resvg", "resvg_options_load_system_fonts");
               resvg_options_load_system_fonts_fptr(opt);
           };

        public static void resvg_options_load_system_fonts(IntPtr opt)
        {
            resvg_options_load_system_fonts_fptr(opt);
        }

        #endregion

        #region resvg_options_destroy

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        private delegate void resvg_options_destroy_delegate(IntPtr opt);

        private static resvg_options_destroy_delegate resvg_options_destroy_fptr =
           (IntPtr opt) =>
           {
               resvg_options_destroy_fptr =
                   GetDelegateForFunction<resvg_options_destroy_delegate>("resvg", "resvg_options_destroy");
               resvg_options_destroy_fptr(opt);
           };

        public static void resvg_options_destroy(IntPtr opt)
        {
            resvg_options_destroy_fptr(opt);
        }

        #endregion

        #region resvg_parse_tree_from_file

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        private delegate ReSvgError resvg_parse_tree_from_file_delegate(string file_path, IntPtr opt, out IntPtr tree);

        private static resvg_parse_tree_from_file_delegate resvg_parse_tree_from_file_fptr =
           (string file_path, IntPtr opt, out IntPtr tree) =>
           {
               resvg_parse_tree_from_file_fptr =
                   GetDelegateForFunction<resvg_parse_tree_from_file_delegate>("resvg", "resvg_parse_tree_from_file");
               return resvg_parse_tree_from_file_fptr(file_path, opt, out tree);
           };

        public static ReSvgError resvg_parse_tree_from_file(string file_path, IntPtr opt, out IntPtr tree)
        {
            return resvg_parse_tree_from_file_fptr(file_path, opt, out tree);
        }

        #endregion

        #region resvg_parse_tree_from_data

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        private delegate ReSvgError resvg_parse_tree_from_data_delegate(string data, UIntPtr length, IntPtr opt, out IntPtr tree);

        private static resvg_parse_tree_from_data_delegate resvg_parse_tree_from_data_fptr =
           (string data, UIntPtr length, IntPtr opt, out IntPtr tree) =>
           {
               resvg_parse_tree_from_data_fptr =
                   GetDelegateForFunction<resvg_parse_tree_from_data_delegate>("resvg", "resvg_parse_tree_from_data");
               return resvg_parse_tree_from_data_fptr(data, length, opt, out tree);
           };

        public static ReSvgError resvg_parse_tree_from_data(string data, UIntPtr length, IntPtr opt, out IntPtr tree)
        {
            return resvg_parse_tree_from_data_fptr(data, length, opt, out tree);
        }

        #endregion

        #region resvg_is_image_empty

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        [return: MarshalAs(UnmanagedType.Bool)]
        private delegate bool resvg_is_image_empty_delegate(IntPtr tree);

        private static resvg_is_image_empty_delegate resvg_is_image_empty_fptr =
           (IntPtr tree) =>
           {
               resvg_is_image_empty_fptr =
                   GetDelegateForFunction<resvg_is_image_empty_delegate>("resvg", "resvg_is_image_empty");
               return resvg_is_image_empty_fptr(tree);
           };

        public static bool resvg_is_image_empty(IntPtr tree)
        {
            return resvg_is_image_empty_fptr(tree);
        }

        #endregion

        #region resvg_get_image_size

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        private delegate ResvgSize resvg_get_image_size_delegate(IntPtr tree);

        private static resvg_get_image_size_delegate resvg_get_image_size_fptr =
           (IntPtr tree) =>
           {
               resvg_get_image_size_fptr =
                   GetDelegateForFunction<resvg_get_image_size_delegate>("resvg", "resvg_get_image_size");
               return resvg_get_image_size_fptr(tree);
           };

        public static ResvgSize resvg_get_image_size(IntPtr tree)
        {
            return resvg_get_image_size_fptr(tree);
        }

        #endregion

        #region resvg_get_image_viewbox

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        private delegate ResvgRect resvg_get_image_viewbox_delegate(IntPtr tree);

        private static resvg_get_image_viewbox_delegate resvg_get_image_viewbox_fptr =
           (IntPtr tree) =>
           {
               resvg_get_image_viewbox_fptr =
                   GetDelegateForFunction<resvg_get_image_viewbox_delegate>("resvg", "resvg_get_image_viewbox");
               return resvg_get_image_viewbox_fptr(tree);
           };

        public static ResvgRect resvg_get_image_viewbox(IntPtr tree)
        {
            return resvg_get_image_viewbox_fptr(tree);
        }

        #endregion

        #region resvg_get_image_bbox

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        [return: MarshalAs(UnmanagedType.Bool)]
        private delegate bool resvg_get_image_bbox_delegate(IntPtr tree, out ResvgRect bbox);

        private static resvg_get_image_bbox_delegate resvg_get_image_bbox_fptr =
           (IntPtr tree, out ResvgRect bbox) =>
           {
               resvg_get_image_bbox_fptr =
                   GetDelegateForFunction<resvg_get_image_bbox_delegate>("resvg", "resvg_get_image_bbox");
               return resvg_get_image_bbox_fptr(tree, out bbox);
           };

        public static bool resvg_get_image_bbox(IntPtr tree, out ResvgRect bbox)
        {
            return resvg_get_image_bbox_fptr(tree, out bbox);
        }

        #endregion

        #region resvg_node_exists

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        [return: MarshalAs(UnmanagedType.Bool)]
        private delegate bool resvg_node_exists_delegate(IntPtr tree, [MarshalAs(UnmanagedType.LPUTF8Str)] string id);

        private static resvg_node_exists_delegate resvg_node_exists_fptr =
           (IntPtr tree, string id) =>
           {
               resvg_node_exists_fptr =
                   GetDelegateForFunction<resvg_node_exists_delegate>("resvg", "resvg_node_exists");
               return resvg_node_exists_fptr(tree, id);
           };

        public static bool resvg_node_exists(IntPtr tree, [MarshalAs(UnmanagedType.LPUTF8Str)] string id)
        {
            return resvg_node_exists_fptr(tree, id);
        }

        #endregion

        #region resvg_get_node_transform

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        [return: MarshalAs(UnmanagedType.Bool)]
        private delegate bool resvg_get_node_transform_delegate(IntPtr tree, [MarshalAs(UnmanagedType.LPUTF8Str)] string id, out ResvgTransform transform);

        private static resvg_get_node_transform_delegate resvg_get_node_transform_fptr =
           (IntPtr tree, string id, out ResvgTransform transform) =>
           {
               resvg_get_node_transform_fptr =
                   GetDelegateForFunction<resvg_get_node_transform_delegate>("resvg", "resvg_get_node_transform");
               return resvg_get_node_transform_fptr(tree, id, out transform);
           };

        public static bool resvg_get_node_transform(IntPtr tree, [MarshalAs(UnmanagedType.LPUTF8Str)] string id, out ResvgTransform transform)
        {
            return resvg_get_node_transform_fptr(tree, id, out transform);
        }

        #endregion

        #region resvg_get_node_bbox

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        [return: MarshalAs(UnmanagedType.Bool)]
        private delegate bool resvg_get_node_bbox_delegate(IntPtr tree, [MarshalAs(UnmanagedType.LPUTF8Str)] string id, out ResvgRect bbox);

        private static resvg_get_node_bbox_delegate resvg_get_node_bbox_fptr =
           (IntPtr tree, string id, out ResvgRect bbox) =>
           {
               resvg_get_node_bbox_fptr =
                   GetDelegateForFunction<resvg_get_node_bbox_delegate>("resvg", "resvg_get_node_bbox");
               return resvg_get_node_bbox_fptr(tree, id, out bbox);
           };

        public static bool resvg_get_node_bbox(IntPtr tree, [MarshalAs(UnmanagedType.LPUTF8Str)] string id, out ResvgRect bbox)
        {
            return resvg_get_node_bbox_fptr(tree, id, out bbox);
        }

        #endregion

        #region resvg_tree_destroy

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        [return: MarshalAs(UnmanagedType.Bool)]
        private delegate bool resvg_tree_destroy_delegate(IntPtr tree);

        private static resvg_tree_destroy_delegate resvg_tree_destroy_fptr =
           (IntPtr tree) =>
           {
               resvg_tree_destroy_fptr =
                   GetDelegateForFunction<resvg_tree_destroy_delegate>("resvg", "resvg_tree_destroy");
               return resvg_tree_destroy_fptr(tree);
           };

        public static bool resvg_tree_destroy(IntPtr tree)
        {
            return resvg_tree_destroy_fptr(tree);
        }

        #endregion

        #region resvg_render

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        private delegate void resvg_render_delegate(IntPtr tree, ResvgTransform transform, uint width, uint height, IntPtr pixmap);

        private static resvg_render_delegate resvg_render_fptr =
           (IntPtr tree, ResvgTransform transform, uint width, uint height, IntPtr pixmap) =>
           {
               resvg_render_fptr =
                   GetDelegateForFunction<resvg_render_delegate>("resvg", "resvg_render");
               resvg_render_fptr(tree, transform, width, height, pixmap);
           };

        public static void resvg_render(IntPtr tree, ResvgTransform transform, uint width, uint height, IntPtr pixmap)
        {
            resvg_render_fptr(tree, transform, width, height, pixmap);
        }

        #endregion

        #region resvg_render_node

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi)]
        private delegate void resvg_render_node_delegate(IntPtr tree, [MarshalAs(UnmanagedType.LPUTF8Str)] string id, ResvgTransform transform, uint width, uint height, IntPtr pixmap);

        private static resvg_render_node_delegate resvg_render_node_fptr =
           (IntPtr tree, string id, ResvgTransform transform, uint width, uint height, IntPtr pixmap) =>
           {
               resvg_render_node_fptr =
                   GetDelegateForFunction<resvg_render_node_delegate>("resvg", "resvg_render_node");
               resvg_render_node_fptr(tree, id, transform, width, height, pixmap);
           };

        public static void resvg_render_node(IntPtr tree, [MarshalAs(UnmanagedType.LPUTF8Str)] string id, ResvgTransform transform, uint width, uint height, IntPtr pixmap)
        {
            resvg_render_node_fptr(tree, id, transform, width, height, pixmap);
        }

        #endregion

    }
}

